name: Django CI

on:
  push:
    branches: 
      - main
      - develop
  # pull_request:
  #   branches: 
  #     - main

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    env:
      DB_DATABASE: donareasy
      DB_USER: root
      DB_PASSWORD: admin

    # services:
    #   mysql:
    #     image: mysql:5.7
    #     env:
    #       MYSQL_DATABASE: donareasy
    #       MYSQL_USER: root
    #       MYSQL_PASSWORD: admin
    #       MYSQL_ROOT_PASSWORD: admin
    #     ports: ['3306:3306']
    #     # needed because the mysql container does not provide a healthcheck
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

    steps:
    # - name: Set up MySQL #https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
    #   run: |
    #     sudo /etc/init.d/mysql start
    #     mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
    - uses: actions/checkout@v3
    - run: mysql -h 127.0.0.1 --port 3306 -u ${{ env.DB_USER }} -p ${{ env.DB_PASSWORD }} 'CREATE DATABASE IF NOT EXISTS ${{ env.DB_DATABASE }};'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Migrations
      run: python manage.py migrate
    - name: Run Tests
      run: |
        python manage.py test --no-input
    # - name: Analysing the code with pylint
    #   run: |
    #     pylint $(git ls-files '*.py')
